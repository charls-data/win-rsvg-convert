name: Cross-compile rsvg-convert for Windows (no MXE)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: ubuntu-latest
    env:
      TRIPLET: x86_64-w64-mingw32
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      RSVG_TAG: 2.60.0   # 指定你要编译的 librsvg tag

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Clone librsvg at tag $RSVG_TAG
        run: |
          git clone --depth 1 \
            --branch "$RSVG_TAG" \
            https://gitlab.gnome.org/GNOME/librsvg.git librsvg
        shell: bash

      - name: Install host tools (mingw-w64, cmake, pkg-config)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            mingw-w64 cmake git pkg-config python3
        shell: bash

      - name: Bootstrap vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git $VCPKG_ROOT
          cd $VCPKG_ROOT
          ./bootstrap-vcpkg.sh -disableMetrics
        shell: bash

      - name: Install dependencies via vcpkg
        run: |
          cd $VCPKG_ROOT
          ./vcpkg install \
            glib:${TRIPLET}-static \
            libxml2:${TRIPLET}-static \
            cairo:${TRIPLET}-static \
            pango:${TRIPLET}-static \
            librsvg:${TRIPLET}-static
        shell: bash

      - name: Configure and build librsvg with Meson
        run: |
          export CC=${TRIPLET}-gcc
          export CXX=${TRIPLET}-g++
          export PKG_CONFIG_PATH=$VCPKG_ROOT/installed/${TRIPLET}-static/lib/pkgconfig

          cd librsvg
          mkdir -p build && cd build

          cat > cross.txt << 'EOF'
          [binaries]
          c = '${TRIPLET}-gcc'
          cpp = '${TRIPLET}-g++'
          ar = '${TRIPLET}-ar'
          strip = '${TRIPLET}-strip'
          pkg-config = 'pkg-config'
          
          [properties]
          needs_exe_wrapper = true
          
          [host_machine]
          system = 'windows'
          cpu_family = 'x86_64'
          cpu = 'x86_64'
          endian = 'little'
          EOF

          meson setup crossbuild \
            --cross-file cross.txt \
            --prefix "$(pwd)/install" \
            --default-library=static \
            -Dbuildtype=release \
            -Dintrospection=disabled \
            ..

          ninja -C crossbuild
          ninja -C crossbuild install
        shell: bash

      - name: Upload Windows exe
        uses: actions/upload-artifact@v4
        with:
          name: rsvg-convert-windows
          path: librsvg/build/crossbuild/install/bin/rsvg-convert.exe
